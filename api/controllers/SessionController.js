// Generated by CoffeeScript 1.6.3
/**
 * SessionController
 *
 * @module      :: Controller
 * @description	:: A set of functions called `actions`.
 *
 *                 Actions contain code telling Sails how to respond to a certain type of request.
 *                 (i.e. do stuff, then send some JSON, show an HTML page, or redirect to another URL)
 *
 *                 You can configure the blueprint URLs which trigger these actions (`config/controllers.js`)
 *                 and/or override them with custom routes (`config/routes.js`)
 *
 *                 NOTE: The code you write here supports both HTTP and Socket.io automatically.
 *
 * @docs        :: http://sailsjs.org/#!documentation/controllers
*/


(function() {
  var bcrypt;

  bcrypt = require('bcrypt');

  module.exports = {
    signin: function(req, res) {
      return res.view('session/signin');
    },
    create: function(req, res) {
      if (!req.param('email') || !req.param('password')) {
        req.session.flash = {
          err: [
            {
              name: 'usernamePasswordRequired',
              message: 'Bitte alle Felder zum anmelden ausf√ºllen!'
            }
          ]
        };
        res.redirect('/session/signin');
        return;
      }
      return User.findOneByEmail(req.param('email')).done(function(err, user) {
        if (err) {
          return next(err);
        }
        if (!user) {
          req.session.flash = {
            err: [
              {
                name: 'userNotFound',
                message: 'Dieser User wurde nicht gefunden'
              }
            ]
          };
          res.redirect('/session/signin');
          return;
        }
        return bcrypt.compare(req.param('password'), user.encryptedPassword, function(err, valid) {
          if (err) {
            return next(err);
          }
          if (!valid) {
            req.session.flash = {
              err: [
                {
                  name: 'wrongPassword',
                  message: 'Bitte geben sie das korrekte Passwort ein'
                }
              ]
            };
            res.redirect('/session/signin');
            return;
          }
          req.session.authenticated = true;
          req.session.User = user;
          return res.redirect('/');
        });
      });
    },
    logout: function(req, res) {
      req.session.destroy();
      req.session.flash = {
        err: [
          {
            name: 'successfulLogout',
            message: 'Sie wurder ausgeloggt'
          }
        ]
      };
      return res.redirect('/session/signin');
    },
    _config: {}
  };

}).call(this);

/*
//@ sourceMappingURL=SessionController.map
*/
